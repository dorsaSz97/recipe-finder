{"version":3,"file":"main.js","mappings":"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","sources":["webpack:///webpack/bootstrap","webpack:///webpack/runtime/global","webpack:///webpack/runtime/publicPath","webpack:///./src/js/config.js","webpack:///./src/js/model.js","webpack:///./src/js/views/searchView.js","webpack:///./src/js/views/resultsView.js","webpack:///./src/js/views/paginationView.js","webpack:///./src/js/views/recipeView.js","webpack:///./src/js/views/navigationView.js","webpack:///./src/js/views/cartView.js","webpack:///./src/js/views/weekdaysView.js","webpack:///./src/index.js"],"sourcesContent":["// The require scope\nvar __webpack_require__ = {};\n\n","__webpack_require__.g = (function() {\n\tif (typeof globalThis === 'object') return globalThis;\n\ttry {\n\t\treturn this || new Function('return this')();\n\t} catch (e) {\n\t\tif (typeof window === 'object') return window;\n\t}\n})();","var scriptUrl;\nif (__webpack_require__.g.importScripts) scriptUrl = __webpack_require__.g.location + \"\";\nvar document = __webpack_require__.g.document;\nif (!scriptUrl && document) {\n\tif (document.currentScript)\n\t\tscriptUrl = document.currentScript.src\n\tif (!scriptUrl) {\n\t\tvar scripts = document.getElementsByTagName(\"script\");\n\t\tif(scripts.length) scriptUrl = scripts[scripts.length - 1].src\n\t}\n}\n// When supporting browsers where an automatic publicPath is not supported you must specify an output.publicPath manually via configuration\n// or pass an empty string (\"\") and set the __webpack_public_path__ variable from your code to use your own logic.\nif (!scriptUrl) throw new Error(\"Automatic publicPath is not supported in this browser\");\nscriptUrl = scriptUrl.replace(/#.*$/, \"\").replace(/\\?.*$/, \"\").replace(/\\/[^\\/]+$/, \"/\");\n__webpack_require__.p = scriptUrl;","export const API_URL = 'https://www.themealdb.com/api/json/v1/1/';\n// no more magic numbers in the code\nexport const PER_PAGE = 9;\n","import { API_URL, PER_PAGE } from './config.js';\n\nexport const state = {\n  currRecipe: {},\n  search: {\n    results: [], // array of result objects [{},{}]\n    resultsPerPage: PER_PAGE,\n    currPage: 1,\n  },\n  bookmarks: [],\n  mealplans: [],\n  cart: [],\n};\n\n// DONE\nexport const getSearchResults = async function (query) {\n  try {\n    const res = await fetch(`${API_URL}search.php?s=${query}`);\n    const data = await res.json(); //{meals:[]}\n    console.log(data);\n\n    if (data.meals === null) throw new Error('Something wrong with fetching');\n\n    // go to first page after a new search\n    state.search.currPage = 1;\n\n    state.search.results = data.meals.map(meal => {\n      // creating new objects because we wanna change the property names\n      return {\n        name: meal.strMeal,\n        id: meal.idMeal,\n        area: meal.strArea,\n        servings: 1,\n        category: meal.strCategory,\n        instructions: meal.strInstructions,\n        imageUrl: meal.strMealThumb,\n        videoUrl: meal.strYoutube,\n        sourceUrl: meal.strSource,\n        ingredients: [],\n        bookmarked: false,\n      };\n    });\n\n    // we have 20 ingredients in the data object and we are putting them in the ingredients array of each result object, in the form of an object with measurement and ingredient's name\n    data.meals.map((meal, mealIndex) => {\n      for (let i = 1; i <= 20; i++) {\n        // if there is any ingredient and its not empty\n        if (meal[`strIngredient${i}`]) {\n          const ingredient = {};\n          ingredient.name = meal[`strIngredient${i}`]; //flour\n\n          if (meal[`strMeasure${i}`].includes('/')) {\n            const [firstFraction, secondFraction] = [\n              ...meal[`strMeasure${i}`].split(' ')[0].replace('/', '').slice(),\n            ];\n            ingredient.quantity = +firstFraction / +secondFraction;\n            ingredient.unit = meal[`strMeasure${i}`].split(' ')[1];\n          } else {\n            ingredient.quantity = isNaN(\n              Number.parseFloat(meal[`strMeasure${i}`], 10)\n            )\n              ? meal[`strMeasure${i}`]\n              : Number.parseFloat(meal[`strMeasure${i}`], 10);\n            ingredient.unit = meal[`strMeasure${i}`]\n              .split(ingredient.quantity)[1]\n              .trim();\n          }\n\n          state.search.results[mealIndex].ingredients.push(ingredient);\n        }\n      }\n    });\n\n    // in each search if they are on the bookmarks array, fill the heart for the recipe\n    state.search.results.forEach(result => {\n      state.bookmarks.forEach(bookmark => {\n        if (result.id === bookmark.id) {\n          result.bookmarked = true;\n        }\n      });\n    });\n  } catch (err) {\n    throw err;\n  }\n};\n\n// DONE\nexport const getSearchResultsPage = function (page = state.search.currPage) {\n  // update the current page\n  state.search.currPage = page;\n\n  const startIndex = state.search.resultsPerPage * (page - 1);\n  const endIndex = state.search.resultsPerPage * page;\n\n  // excluding the endIndex itself\n  return state.search.results.slice(startIndex, endIndex);\n};\n\nexport const loadCurrentRecipe = async function (recipe) {\n  // keeping track of the current visible recipe\n  try {\n    const res = await fetch(`${API_URL}lookup.php?i=${recipe.id}`);\n    const data = await res.json();\n    const currRecipe = data.meals[0]; // recipe object of the current meal {}\n\n    state.currRecipe = {\n      name: currRecipe.strMeal,\n      id: currRecipe.idMeal,\n      area: currRecipe.strArea,\n      servings: 1,\n      category: currRecipe.strCategory,\n      instructions: currRecipe.strInstructions,\n      imageUrl: currRecipe.strMealThumb,\n      videoUrl: currRecipe.strYoutube,\n      sourceUrl: currRecipe.strSource,\n      ingredients: [],\n      bookmarked: false,\n      time: '',\n      day: '',\n    };\n\n    for (let i = 1; i <= 20; i++) {\n      if (currRecipe[`strIngredient${i}`]) {\n        const ingredient = {};\n        ingredient.name = currRecipe[`strIngredient${i}`];\n\n        if (currRecipe[`strMeasure${i}`].includes('/')) {\n          const [firstFraction, secondFraction] = [\n            ...currRecipe[`strMeasure${i}`]\n              .split(' ')[0]\n              .replace('/', '')\n              .slice(),\n          ];\n\n          ingredient.quantity = +firstFraction / +secondFraction;\n          ingredient.unit = currRecipe[`strMeasure${i}`].split(' ')[1];\n        } else {\n          ingredient.quantity = isNaN(\n            Number.parseFloat(currRecipe[`strMeasure${i}`], 10)\n          )\n            ? currRecipe[`strMeasure${i}`]\n            : Number.parseFloat(currRecipe[`strMeasure${i}`], 10);\n          ingredient.unit = currRecipe[`strMeasure${i}`]\n            .split(ingredient.quantity)[1]\n            .trim();\n        }\n\n        state.currRecipe.ingredients.push(ingredient);\n      }\n    }\n\n    state.bookmarks.forEach(bookmark => {\n      if (state.currRecipe.id === bookmark.id) {\n        state.currRecipe.bookmarked = true;\n      }\n    });\n\n    return state.currRecipe;\n  } catch (err) {\n    throw err;\n  }\n};\n\nexport const updateServings = function (newServings) {\n  state.currRecipe.ingredients.forEach(ingredient => {\n    if (!isNaN(ingredient.quantity))\n      return (ingredient.quantity =\n        (ingredient.quantity * +newServings) / state.currRecipe.servings);\n  });\n\n  state.currRecipe.servings = newServings;\n};\n\nconst setCartLS = function () {\n  localStorage.setItem('cart', JSON.stringify(state.cart));\n};\n\nexport const addToCart = function (checkedIngredients) {\n  if (state.cart.length !== 0) {\n    checkedIngredients.forEach(checkedIng => {\n      if (\n        state.cart.every(item => {\n          return checkedIng !== item;\n        })\n      ) {\n        state.cart.push(checkedIng);\n      }\n    });\n  } else {\n    state.cart = checkedIngredients;\n  }\n  setCartLS();\n};\n\n// DONE\nexport const removeFromCart = function (ingredient) {\n  // find the index of the clicked ingredient\n  const ingredientIndex = state.cart.findIndex(item => item === ingredient);\n  if (ingredientIndex === null) return;\n\n  // remove the element from the cart and localstorage\n  state.cart.splice(ingredientIndex, 1);\n  setCartLS();\n};\n\nconst setMealplanLS = function () {\n  localStorage.setItem('mealplans', JSON.stringify(state.mealplans));\n};\n\nexport const addMealplan = function (mealplan, recipe) {\n  if (!mealplan.day || !mealplan.time) return;\n\n  // to count if the condition matches for every element in the mealplans array so that we dont add the same meal for the same day and time\n  let count = 0;\n\n  if (recipe.id === state.currRecipe.id) {\n    state.currRecipe.day = mealplan.day;\n    state.currRecipe.time = mealplan.time;\n\n    if (state.mealplans.length !== 0) {\n      state.mealplans.forEach(mealp => {\n        if (\n          mealp.day === state.currRecipe.day &&\n          mealp.time === state.currRecipe.time\n        )\n          return;\n\n        count++;\n      });\n\n      if (count === state.mealplans.length) {\n        state.mealplans.push(state.currRecipe);\n        setMealplanLS();\n      }\n    } else {\n      state.mealplans.push(state.currRecipe);\n      setMealplanLS();\n    }\n  }\n  console.log(state.mealplans);\n  return state.mealplans;\n};\n\n// export const removeMealplan = function (mealplan, recipe) {\n//   if (!mealplan.day || !mealplan.time) return;\n\n//   // to count if the condition matches for every element in the mealplans array so that we dont add the same meal for the same day and time\n//   let count = 0;\n\n//   if (recipe.id === state.currRecipe.id) {\n//     state.currRecipe.day = mealplan.day;\n//     state.currRecipe.time = mealplan.time;\n\n//     if (state.mealplans.length !== 0) {\n//       state.mealplans.forEach(mealp => {\n//         if (\n//           mealp.day === state.currRecipe.day &&\n//           mealp.time === state.currRecipe.time\n//         )\n//           return;\n\n//         count++;\n//       });\n\n//       if (count === state.mealplans.length) {\n//         state.mealplans.push(state.currRecipe);\n//         setMealplanLS();\n//       }\n//     } else {\n//       state.mealplans.push(state.currRecipe);\n//       setMealplanLS();\n//     }\n//   }\n\n//   return state.mealplans;\n// };\n\n// export const showMealPlan = function (day) {\n//   // let dailyplan = [];\n//   console.log(state.MEALPLANS.filter(mp => mp.days === day));\n//   return state.MEALPLANS.filter(mp => mp.days === day);\n// };\n\nconst setBookmarkLS = function () {\n  localStorage.setItem('bookmarks', JSON.stringify(state.bookmarks));\n};\n\nexport const addBookmark = function (recipe) {\n  if (recipe.id === state.currRecipe.id) state.currRecipe.bookmarked = true;\n  state.bookmarks.push(recipe);\n\n  setBookmarkLS();\n};\n\nexport const removeBookmark = function (recipe) {\n  if (recipe.id === state.currRecipe.id) state.currRecipe.bookmarked = false;\n  const currRecipeIndex = state.bookmarks.findIndex(r => r.id === recipe.id);\n  state.bookmarks.splice(currRecipeIndex, 1);\n\n  setBookmarkLS();\n};\nexport const loadDailyMealplan = function (day) {\n  const mealsForDay = state.mealplans.filter(meal => meal.day === day);\n\n  return mealsForDay;\n};\n\nconst init = function () {\n  const mealplansLS = localStorage.getItem('mealplans');\n  if (mealplansLS) {\n    state.mealplans = JSON.parse(mealplansLS);\n  }\n  const bookmarksLS = localStorage.getItem('bookmarks');\n  if (bookmarksLS) {\n    state.bookmarks = JSON.parse(bookmarksLS);\n  }\n  const cartLS = localStorage.getItem('cart');\n  if (cartLS) {\n    state.cart = JSON.parse(cartLS);\n  }\n};\ninit();\n","class SearchView {\n  _parentElement = document.querySelector('.search');\n\n  getSearchQuery() {\n    const searchQuery =\n      this._parentElement.querySelector('.search__field').value;\n    // clearing the search field after getting the value of it\n    this._clearInput();\n    return searchQuery;\n  }\n\n  makeNotClickable() {\n    this._parentElement.querySelector('.search__field').blur();\n    this._parentElement.querySelector('.search__field').style.pointerEvents =\n      'none';\n  }\n\n  makeClickable() {\n    this._parentElement.querySelector('.search__field').focus();\n    this._parentElement.querySelector('.search__field').style.pointerEvents =\n      'all';\n  }\n\n  _clearInput() {\n    this._parentElement.querySelector('.search__field').value = '';\n  }\n\n  // -----EVENT HANDLERS------\n\n  // publisher-subscriber pattern\n  addHandlerSearch(handler) {\n    // submitting is either with pressing the enter key or clicking the button of type submit\n    this._parentElement.addEventListener('submit', e => {\n      // prevent the page from reloading (we couldnt get the value otherwise)\n      e.preventDefault();\n      handler();\n    });\n  }\n}\n\n// because we dont want to make multiple instances of this view so we export one instance of it\nexport default new SearchView();\n","class ResultsView {\n  _parentElement = document.querySelector('.recipes');\n  _data;\n  _message = 'Search for something delicious to cook :)';\n\n  renderSpinner() {\n    const html = `\n    <div class=\"spinner\"><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div></div>\n  `;\n    // makes sure we are only showing the spinner inside that container\n    this._clear();\n    document.querySelector('.pagination').innerHTML = '';\n    this._parentElement.insertAdjacentHTML('afterbegin', html);\n  }\n\n  render(data, isMealPlan = false) {\n    if (Object.keys(data).length === 0 && !Array.isArray(data)) {\n      this._clear();\n      this.renderMessage('No favorite meals');\n      return;\n    }\n\n    // we always wanna store outside values, inside the class in a property and not manipulate them directly\n    this._data = data;\n\n    // make sure we are not showing the spinner (clear out the space entirely)\n    this._clear();\n\n    if (!isMealPlan) {\n      // create the html code for each recipe\n      const html = this._createHTML();\n      this._parentElement.insertAdjacentHTML('beforeend', html);\n    } else {\n      const html = this._createMealplanHTML();\n      this._parentElement.insertAdjacentHTML('beforeend', html);\n    }\n  }\n\n  renderDailyMeals(data) {\n    this._data = data;\n\n    document.querySelector('.weekly-meals-container').innerHTML = '';\n    const html = this._createDailyMealsHTML();\n    document\n      .querySelector('.weekly-meals-container')\n      .insertAdjacentHTML('beforeend', html);\n  }\n  renderMessage(message = this._message) {\n    const html = `\n      <div class=\"message\">\n        <p>${message}</p>\n      </div>\n    `;\n    this._clear();\n    this._parentElement.insertAdjacentHTML('afterbegin', html);\n  }\n\n  _createHTML() {\n    const html = this._data\n      .map(meal => {\n        return `\n        <article class=\"recipe\">\n          <figure class=\"recipe__image\">\n            <img\n              src=\"${meal.imageUrl}\"\n              alt=\"${meal.name}\"\n            />\n          </figure>\n          <p class=\"recipe__name\">\n            ${meal.name}\n          </p>\n        </article>\n      `;\n      })\n      .join(''); // array of article code that are now a long string of articles to put in the code\n\n    return html;\n  }\n\n  _clear() {\n    this._parentElement.innerHTML = '';\n  }\n\n  _createMealplanHTML() {\n    const html = `\n            <div class=\"weekdays\">\n              <button class=\"weekdays__btn\" data-day=\"saturday\">Sat</button>\n              <button class=\"weekdays__btn\" data-day=\"sunday\">Sun</button>\n              <button class=\"weekdays__btn\" data-day=\"monday\">Mon</button>\n              <button class=\"weekdays__btn\" data-day=\"tuesday\">Tue</button>\n              <button class=\"weekdays__btn\" data-day=\"wednesday\">Wed</button>\n              <button class=\"weekdays__btn\" data-day=\"thursday\">Thu</button>\n              <button class=\"weekdays__btn\" data-day=\"friday\">Fri</button>\n            </div>\n            <div class=\"weekly-meals-container\"></div>\n          `;\n    return html;\n  }\n\n  _createDailyMealsHTML() {\n    console.log(this._data);\n\n    // ????? maybe i can write it with switch and less code\n    const html = `\n\n          <section class=\"meal-type breakfast\">\n            <p>Breakfast</p>\n            <ul class=\"meal-type__list\">\n            ${this._data\n              .map(meal => {\n                if (meal.time === 'breakfast')\n                  return `\n                <article class=\"recipe\">\n                  <figure class=\"recipe__image\">\n                    <img\n                      src=\"${meal.imageUrl}\"\n                      alt=\"${meal.name}\"\n                    />\n                  </figure>\n                  <p class=\"recipe__name\">\n                    ${meal.name}\n                  </p>\n                </article>\n              `;\n              })\n              .join('')}\n            </ul>\n          </section>\n          <section class=\"meal-type lunch\">\n            <p>Lunch</p>\n            <ul class=\"meal-type__list\">\n            ${this._data\n              .map(meal => {\n                if (meal.time === 'lunch')\n                  return `\n                <article class=\"recipe\">\n                  <figure class=\"recipe__image\">\n                    <img\n                      src=\"${meal.imageUrl}\"\n                      alt=\"${meal.name}\"\n                    />\n                  </figure>\n                  <p class=\"recipe__name\">\n                    ${meal.name}\n                  </p>\n                </article>\n              `;\n              })\n              .join('')}\n            </ul>\n          </section>\n\n          <section class=\"meal-type dinner\">\n            <p>Dinner</p>\n            <ul class=\"meal-type__list\">\n            ${this._data\n              .map(meal => {\n                if (meal.time === 'dinner')\n                  return `\n                <article class=\"recipe\">\n                  <figure class=\"recipe__image\">\n                    <img\n                      src=\"${meal.imageUrl}\"\n                      alt=\"${meal.name}\"\n                    />\n                  </figure>\n                  <p class=\"recipe__name\">\n                    ${meal.name}\n                  </p>\n                </article>\n              `;\n              })\n              .join('')}\n            </ul>\n          </section>\n\n      `;\n    return html;\n  }\n\n  // -----EVENT HANDLERS------\n\n  addHandlerClick(handler) {\n    // event delegation => because most events bubble up to their parent\n    this._parentElement.addEventListener('click', e => {\n      const article = e.target.closest('.recipe');\n      if (!article) return;\n\n      // sending the clicked recipes name to be loaded\n      this._data.forEach(meal => {\n        if (meal.name === article.querySelector('.recipe__name').innerText)\n          handler(meal);\n      });\n    });\n  }\n}\n\nexport default new ResultsView();\n","class PaginationView {\n  _parentElement = document.querySelector('.pagination');\n  _data;\n\n  render(data) {\n    this._data = data; //search object of the model's state\n\n    this.clear();\n\n    const html = this._createHTML();\n    this._parentElement.insertAdjacentHTML('beforeend', html);\n  }\n\n  clear() {\n    this._parentElement.innerHTML = '';\n  }\n\n  // -----EVENT HANDLERS------\n  addHandlerClick(handler) {\n    this._parentElement.addEventListener('click', e => {\n      const btn = e.target.closest('.pagination__btn');\n      if (!btn) return;\n\n      // we need to have a connection between dom and what we wanna happen\n      handler(+btn.dataset.goto);\n    });\n  }\n\n  _createHTML() {\n    const currentPage = this._data.currPage;\n    const allPages = Math.ceil(\n      this._data.results.length / this._data.resultsPerPage\n    );\n\n    // having multiple ifs is better than super nested if/else\n    // 1) we only have one page -> no buttons\n    if (currentPage === 1 && allPages === 1) {\n      return `\n      <button data-goto=\"\" class=\"pagination__btn pagination__btn--prev\">\n        <span></span>\n      </button>\n\n        <span>${currentPage}</span>\n        \n      <button data-goto=\"\" class=\"pagination__btn pagination__btn--next\">\n        <span></span>\n      </button>\n      `;\n    }\n\n    // 2) we are on the last page and there were other pages before\n    if (currentPage === allPages && allPages > 1) {\n      return `\n      <button data-goto=\"${\n        currentPage - 1\n      }\" class=\"pagination__btn pagination__btn--prev\">\n        <span>&lt; Page ${currentPage - 1}</span>\n      </button>\n\n        <span>${currentPage}</span>\n        \n      <button data-goto=\"\" class=\"pagination__btn pagination__btn--next\">\n        <span></span>\n      </button>\n      `;\n    }\n\n    // 3) we are on the first page and there are other pages after\n    if (currentPage === 1 && allPages > 1) {\n      return `\n      <button data-goto=\"\" class=\"pagination__btn pagination__btn--prev\">\n        <span></span>\n      </button>\n\n        <span>${currentPage}</span>\n        \n      <button data-goto=\"${\n        currentPage + 1\n      }\" class=\"pagination__btn pagination__btn--next\">\n        <span>Page ${currentPage + 1} &gt;</span>\n      </button>\n      `;\n    }\n    // 4) we are somewhere in the middle\n    if (currentPage < allPages) {\n      return `\n      <button data-goto=\"${\n        currentPage - 1\n      }\" class=\"pagination__btn pagination__btn--prev\">\n        <span>&lt; Page ${currentPage - 1}</span>\n      </button>\n\n        <span>${currentPage}</span>\n        \n      <button data-goto=\"${\n        currentPage + 1\n      }\" class=\"pagination__btn pagination__btn--next\">\n        <span>Page ${currentPage + 1} &gt;</span>\n      </button>\n      `;\n    }\n\n    return '';\n  }\n}\n\nexport default new PaginationView();\n","import iconHeart from '../../assets/img/heart.svg';\nimport iconHeartFill from '../../assets/img/heart-filled.svg';\n\nclass RecipeView {\n  _parentElement = document.querySelector('.recipe-window');\n  _data;\n\n  // // because it doesnt have anything to do with the logic and its only presentation, we wont do it in the init function of the controller\n  // constructor() {\n  // this._parentElement.addEventListener('click', e => {\n  //   const btn = e.target.closest('.btn--close');\n  //   if (!btn) return;\n\n  //   this._hideRecipe();\n  // });\n  // }\n\n  render(data) {\n    this._data = data; // recipe object {}\n    this._clear();\n\n    const html = this._createHTML();\n    this._parentElement.insertAdjacentHTML('afterbegin', html);\n\n    this._showRecipe();\n  }\n\n  update(data) {\n    // ??? there could be a better way to do it - check out mutation observer?\n\n    this._data = data;\n\n    // we create the code with the current data but wont put it in the html file\n    const newHtml = this._createHTML();\n\n    // this creates a virtual dom for the new html code we have (this is the top of all the html we pass in so we can select them as its child nodes)\n    const newDOM = document.createRange().createContextualFragment(newHtml);\n\n    // because newDOM is a dom element, we can select all the nodes in it with qurySAll\n    const newElements = Array.from(newDOM.querySelectorAll('*'));\n    // we select all the nodes we're currently showing\n    const currElements = Array.from(this._parentElement.querySelectorAll('*'));\n\n    // compare the two\n    newElements.forEach((newEl, newElIndex) => {\n      const currEl = currElements[newElIndex];\n\n      // text\n      if (\n        !newEl.isEqualNode(currEl) && // ignore if the two are equals\n        newEl.firstChild?.nodeValue.trim() !== '' // the node is text and not of other types (otherwise it would change the whole container as well because those are different as well)\n      ) {\n        currEl.textContent = newEl.textContent;\n      }\n\n      // attr\n      if (!newEl.isEqualNode(currEl))\n        Array.from(newEl.attributes).forEach(attr =>\n          currEl.setAttribute(attr.name, attr.value)\n        );\n    });\n  }\n\n  _showRecipe() {\n    this._parentElement.style.transform = 'translateY(-102%)';\n  }\n\n  _hideRecipe() {\n    this._parentElement.style.transform = 'translateY(0%)';\n  }\n\n  _clear() {\n    this._parentElement.innerHTML = '';\n  }\n\n  _createHTML() {\n    const html = `\n    <button class=\"btn--close\">CLOSE</button>\n      <div class=\"recipe-main-content\">\n        <div class=\"recipe-window__left\">\n          <header class=\"header\">\n            <div>\n              <span class=\"category\">${this._data.category}</span>\n              <div class=\"recipe-heading\">\n                <h2>${this._data.name}</h2>\n                <img class=\"btn--bookmark\" src=${\n                  this._data.bookmarked ? iconHeartFill : iconHeart\n                }>\n              </div>\n            </div>\n            <figure class=\"recipe-window__image\">\n              <img\n                  src=\"${this._data.imageUrl}\"\n                  alt=\"${this._data.name}\"\n              />\n            </figure>\n          </header>\n          \n          <ul class=\"instructions\">\n            ${this._data.instructions\n              .split('\\r\\n')\n              .filter(instruction => instruction !== '')\n              .map((instruction, step) => {\n                return `\n                <li>\n                  <span>STEP ${step + 1} )</span>\n                  ${instruction}\n                </li>\n                `;\n              })\n              .join('')}\n          </ul>\n        </div>\n\n        <div class=\"recipe-window__right\">\n          <header class=\"header\">\n            <h2>ingredients</h2>\n            <div class=\"servings\">\n              <button class=\"servings__btn btn--dec\"  data-serves=\"${\n                +this._data.servings - 1\n              }\">\n                -\n              </button>\n              <span>${this._data.servings}</span>\n              <button class=\"servings__btn btn--inc\"  data-serves=\"${\n                +this._data.servings + 1\n              }\">\n                +\n              </button>\n            </div>\n          </header>\n\n          <ul class=\"ingredients\">\n          ${this._data.ingredients\n            .map(ingredient => {\n              return `\n\n            <li class=\"ingredient\">\n              <input type=\"checkbox\" name=\"${ingredient.name}\" id=\"${ingredient.name}\" />\n              <label for=\"${ingredient.name}\">${ingredient.quantity} ${ingredient.unit} ${ingredient.name} </label>\n            </li>\n           \n           `;\n            })\n            .join('')}\n          </ul>\n\n\n          <div class=\"mealplan-selections\">\n            <select name=\"day\" id=\"day\" class=\"day-selection\">\n              <option value=\"\">Day...</option>\n              <option value=\"saturday\">Saturday</option>\n              <option value=\"sunday\">Sunday</option>\n              <option value=\"monday\">Monday</option>\n              <option value=\"tuesday\">Tuesday</option>\n              <option value=\"wednesday\">Wednesday</option>\n              <option value=\"thursday\">Thursday</option>\n              <option value=\"friday\">Friday</option>\n            </select>\n            <select name=\"time\" id=\"time\" class=\"time-selection\">\n              <option value=\"\">Meal...</option>\n              <option value=\"breakfast\">Breakfast</option>\n              <option value=\"lunch\">Lunch</option>\n              <option value=\"dinner\">Dinner</option>\n            </select>\n          </div>\n        </div>\n      </div>\n    `;\n    return html;\n  }\n\n  // -----EVENT HANDLERS------\n\n  addHandlerUpdateServings(handler) {\n    this._parentElement.addEventListener('click', e => {\n      const btn = e.target.closest('.servings__btn');\n\n      if (!btn) return;\n\n      const { serves } = btn.dataset;\n      if (+serves > 0) handler(+serves);\n    });\n  }\n\n  addHandlerAddBookmark(handler) {\n    this._parentElement.addEventListener('click', e => {\n      const btn = e.target.closest('.btn--bookmark');\n      if (!btn) return;\n\n      handler();\n    });\n  }\n\n  addHandlerClose(handler) {\n    this._parentElement.addEventListener('click', e => {\n      const btn = e.target.closest('.btn--close');\n      if (!btn) return;\n\n      const day = document.getElementById('day');\n      const time = document.getElementById('time');\n      const mealPlan = { day: day.value, time: time.value };\n\n      const checkedIngredients = Array.from(\n        document.querySelectorAll('input[type=\"checkbox\"]')\n      )\n        .filter(inp => inp.checked === true)\n        .map(inp => inp.name);\n\n      this._hideRecipe();\n      handler(mealPlan, checkedIngredients);\n    });\n  }\n}\n\nexport default new RecipeView();\n","class NavigationView {\n  _parentElement = document.querySelector('.nav');\n  _navActiveName = this._parentElement.dataset.currentPage;\n\n  constructor() {\n    this.activateLinks();\n  }\n\n  activateLinks() {\n    this._navActiveName = this._parentElement.dataset.currentPage;\n\n    this._parentElement\n      .querySelectorAll('.nav__link')\n      .forEach(link => link.classList.remove('active'));\n\n    this._parentElement\n      .querySelector(`.link--${this._navActiveName}`)\n      .classList.add('active');\n  }\n\n  // -----EVENT HANDLERS------\n\n  addHandlerBookmarksClick(handler) {\n    this._parentElement.addEventListener('click', e => {\n      const btn = e.target.closest('.link--bookmarks');\n      if (!btn) return;\n\n      document.querySelector('nav').dataset.currentPage = 'bookmarks';\n\n      handler();\n    });\n  }\n\n  addHandlerMealplanClick(handler) {\n    this._parentElement.addEventListener('click', e => {\n      const btn = e.target.closest('.link--mealplan');\n      if (!btn) return;\n\n      document.querySelector('nav').dataset.currentPage = 'mealplan';\n\n      handler();\n    });\n  }\n\n  addHandlerBrowseClick(handler) {\n    this._parentElement.addEventListener('click', e => {\n      const btn = e.target.closest('.link--browse');\n      if (!btn) return;\n\n      document.querySelector('nav').dataset.currentPage = 'browse';\n\n      handler();\n    });\n  }\n}\n\nexport default new NavigationView();\n","class CartView {\n  _parentElement = document.querySelector('.groceries__container');\n  _data;\n  _errorMsg = 'Nothing in your cart!';\n\n  render(data) {\n    this._data = data; // ingredients array ['','','']\n\n    if (this._data.length === 0) {\n      this._renderError(this._errorMsg);\n      return;\n    }\n\n    this._clear();\n\n    const html = this._createHTML();\n    this._parentElement.insertAdjacentHTML('afterbegin', html);\n  }\n\n  _clear() {\n    this._parentElement.innerHTML = '';\n  }\n\n  _createHTML() {\n    const html = `\n            <ul class=\"groceries__list\">\n              ${this._data\n                .map(ing => {\n                  return `<li class=\"groceries__item\">${ing}</li>`;\n                })\n                .join('')}\n            </ul>\n          `;\n    return html;\n  }\n\n  _renderError(message) {\n    this._clear();\n    const html = `\n          <p class=\"message\">\n          ${message}\n          </p>\n    `;\n    this._parentElement.insertAdjacentHTML('afterbegin', html);\n  }\n\n  // -----EVENT HANDLERS------\n  addHandlerDelete(handler) {\n    this._parentElement.addEventListener('click', e => {\n      const item = e.target.closest('.groceries__item');\n      if (!item) return;\n\n      handler(item.innerText);\n    });\n  }\n\n  // loading the cart from the local storage as soon as the window loads (because there is nothing to click to then load the cart)\n  addHandlerLoad(handler) {\n    window.addEventListener('load', handler);\n  }\n}\n\nexport default new CartView();\n","class WeekdaysView {\n  _parentElement = document.querySelector('.recipes');\n  _data;\n\n  // -----EVENT HANDLERS------\n  addHandlerClick(handler) {\n    this._parentElement.addEventListener('click', e => {\n      const day = e.target.closest('.weekdays__btn');\n      if (!day) return;\n\n      // activate clicked day\n      this._parentElement\n        .querySelectorAll('.weekdays__btn')\n        .forEach(b => b.classList.remove('active'));\n      day.classList.add('active');\n\n      handler(day.dataset.day);\n    });\n  }\n}\n\nexport default new WeekdaysView();\n","import './styles/index.scss';\nimport * as model from './js/model.js';\nimport searchView from './js/views/searchView';\nimport resultsView from './js/views/resultsView';\nimport paginationView from './js/views/paginationView';\nimport recipeView from './js/views/recipeView';\nimport navigationView from './js/views/navigationView';\nimport cartView from './js/views/cartView';\nimport weekdaysView from './js/views/weekdaysView';\n\nconst controlDisplayRecipe = async function (recipe) {\n  try {\n    // 1) Creating a new recipe object for the current clicked recipe\n    const currRecipe = await model.loadCurrentRecipe(recipe);\n\n    // 2) Render the clicked recipe\n    recipeView.render(currRecipe);\n  } catch (err) {\n    console.error(err);\n  }\n};\n\nconst controlServings = function (newServings) {\n  model.updateServings(newServings);\n\n  recipeView.update(model.state.currRecipe);\n};\n\nconst controlBookmark = function () {\n  // 1) Toggle the bookmarked property of the current recipe\n  if (model.state.currRecipe.bookmarked) {\n    model.removeBookmark(model.state.currRecipe);\n  } else {\n    // should be else because otherwise both will happen one after the other and the first if wouldnt take effect\n    model.addBookmark(model.state.currRecipe);\n  }\n\n  // 2) Render the new recipeView with the bookmark icon filled\n  recipeView.update(model.state.currRecipe);\n};\n\nconst controlExtraDetails = function (mealplan, checkedIngredients) {\n  // 1) Add the chosen day and time for the current recipe to the array of mealplans\n  model.addMealplan(mealplan, model.state.currRecipe);\n\n  // 2) Add the checked ingredients to the model\n  model.addToCart(checkedIngredients);\n\n  // 3) Render ingredients to the cartView\n  cartView.render(model.state.cart);\n\n  // 4) Render the new bookmarks\n\n  if (document.querySelector('nav').dataset.currentPage === 'bookmarks')\n    resultsView.render(model.state.bookmarks);\n};\n\nconst controlDailyMealResults = function (day) {\n  const mealsForDay = model.loadDailyMealplan(day);\n\n  resultsView.renderDailyMeals(mealsForDay);\n};\n\n// DONEs\n\nconst controlDeleteIngredients = function (ingredient) {\n  //  1) Delete the ingredient\n  model.removeFromCart(ingredient);\n\n  // 2) Render the new cart\n  cartView.render(model.state.cart);\n};\n\nconst controlCartLoad = function () {\n  cartView.render(model.state.cart);\n};\n\nconst controlSearchResults = async function () {\n  try {\n    // 1) Render the spinner in the resultsView until the data is loaded\n    resultsView.renderSpinner();\n\n    // 2) Get the search query the user has entered\n    const query = searchView.getSearchQuery();\n    // guard clause\n    if (!query) return;\n\n    // 3) Load the data from the API with the query\n    await model.getSearchResults(query);\n\n    // 4 ) Load the correct amount of results based on the currPage (its page 1 by default => the first 6 results)\n    const refinedData = model.getSearchResultsPage();\n\n    // 5) Based on the received data render the results from the correct page\n    resultsView.render(refinedData);\n\n    // 4) Render pagination buttons\n    paginationView.render(model.state.search);\n  } catch (err) {\n    console.error(err);\n  }\n};\n\nconst controlPagination = function (goToPage) {\n  // 1) Render new set of results\n  resultsView.render(model.getSearchResultsPage(goToPage));\n\n  // 2) Render new pagination buttons\n  paginationView.render(model.state.search);\n};\n\nconst controlBrowseResults = function () {\n  paginationView.clear();\n  navigationView.activateLinks();\n  // 2) Making the search field ready to be typed in\n  searchView.makeClickable();\n\n  resultsView.renderMessage();\n};\n\nconst controlBookmarksResults = function () {\n  paginationView.clear();\n  navigationView.activateLinks();\n  // 1) Making the search field unavailable\n  searchView.makeNotClickable();\n\n  // 2) Render the bookmarks in the reusltsView instead of all the searched recipes\n  resultsView.render(model.state.bookmarks);\n};\n\nconst controlMealplanResults = function () {\n  paginationView.clear();\n  navigationView.activateLinks();\n  searchView.makeNotClickable();\n\n  // 2) Render the mealplan in the reusltsView instead of all the searched recipes\n  resultsView.render(model.state.mealplans, true);\n};\n\nconst init = function () {\n  resultsView.renderMessage();\n  cartView.addHandlerDelete(controlDeleteIngredients);\n  cartView.addHandlerLoad(controlCartLoad);\n  searchView.addHandlerSearch(controlSearchResults);\n  paginationView.addHandlerClick(controlPagination);\n  navigationView.addHandlerBrowseClick(controlBrowseResults);\n  navigationView.addHandlerBookmarksClick(controlBookmarksResults);\n  navigationView.addHandlerMealplanClick(controlMealplanResults);\n\n  resultsView.addHandlerClick(controlDisplayRecipe);\n  recipeView.addHandlerUpdateServings(controlServings);\n  recipeView.addHandlerAddBookmark(controlBookmark);\n  recipeView.addHandlerClose(controlExtraDetails);\n\n  weekdaysView.addHandlerClick(controlDailyMealResults);\n};\n\n// because this is the entry point and has all the modules imported in it. the other ones are just sitting there waiting for controller's order\ninit();\n"],"names":["__webpack_require__","g","globalThis","this","Function","e","window","scriptUrl","importScripts","location","document","currentScript","src","scripts","getElementsByTagName","length","Error","replace","p","API_URL","state","currRecipe","search","results","resultsPerPage","currPage","bookmarks","mealplans","cart","getSearchResults","query","fetch","res","json","data","console","log","meals","map","meal","name","strMeal","id","idMeal","area","strArea","servings","category","strCategory","instructions","strInstructions","imageUrl","strMealThumb","videoUrl","strYoutube","sourceUrl","strSource","ingredients","bookmarked","mealIndex","i","ingredient","includes","split","slice","firstFraction","secondFraction","quantity","unit","isNaN","Number","parseFloat","trim","push","forEach","result","bookmark","getSearchResultsPage","page","startIndex","endIndex","loadCurrentRecipe","recipe","time","day","setCartLS","localStorage","setItem","JSON","stringify","setMealplanLS","setBookmarkLS","mealplansLS","getItem","parse","bookmarksLS","cartLS","init","SearchView","querySelector","searchQuery","_parentElement","value","_clearInput","blur","style","pointerEvents","focus","handler","addEventListener","preventDefault","ResultsView","_clear","innerHTML","insertAdjacentHTML","isMealPlan","Object","keys","Array","isArray","renderMessage","_data","html","_createMealplanHTML","_createHTML","_createDailyMealsHTML","message","_message","join","article","target","closest","innerText","PaginationView","clear","btn","dataset","currentPage","allPages","Math","ceil","RecipeView","_showRecipe","newHtml","newDOM","createRange","createContextualFragment","newElements","from","querySelectorAll","currElements","newEl","newElIndex","currEl","isEqualNode","firstChild","nodeValue","textContent","attributes","attr","setAttribute","transform","iconHeartFill","iconHeart","filter","instruction","step","serves","getElementById","mealPlan","checkedIngredients","inp","checked","_hideRecipe","NavigationView","activateLinks","_navActiveName","link","classList","remove","add","CartView","_renderError","_errorMsg","ing","item","WeekdaysView","b","controlDisplayRecipe","model","recipeView","render","error","controlSearchResults","resultsView","renderSpinner","searchView","getSearchQuery","refinedData","paginationView","cartView","addHandlerDelete","ingredientIndex","findIndex","splice","addHandlerLoad","addHandlerSearch","addHandlerClick","goToPage","navigationView","addHandlerBrowseClick","makeClickable","addHandlerBookmarksClick","makeNotClickable","addHandlerMealplanClick","addHandlerUpdateServings","newServings","update","addHandlerAddBookmark","currRecipeIndex","r","addHandlerClose","mealplan","count","mealp","checkedIng","every","weekdaysView","mealsForDay","renderDailyMeals"],"sourceRoot":""}